/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIs;

import Beans.Staff;
import Model.DBConnection;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Emmanuel Nzekwe
 */
public class StaffScreen extends javax.swing.JPanel {
    private DBConnection dbConnection = null;
    protected static DefaultTableModel dtm;
    private ArrayList<Staff> staff;

    /**
     * Creates new form StaffScreen
     */
    public StaffScreen() {
        initComponents();
        dbConnection = new DBConnection();
        dtm = (DefaultTableModel) staffDetailsTable.getModel();

        staff = dbConnection.getAllStaff();
        populateStaffTable(staff);

        //clear fields 
    }

    //method to populate the staff table
    protected static void populateStaffTable(ArrayList<Staff> staff) {
        for (int index = 0; index < staff.size(); index++) {

            int staffID = staff.get(index).getId();
            String firstName = staff.get(index).getFirstName();
            String lastname = staff.get(index).getLastName();
            String dept = staff.get(index).getDepartment();
            String phone = staff.get(index).getPhone();
            String email = staff.get(index).getEmail();
            String username = staff.get(index).getUsername();
            String password = staff.get(index).getPassword();
            String status = staff.get(index).getStatus();

            insertIntoStaffTable(staffID, firstName, lastname, dept, phone, email, username, password, status);
        }
    }

    //populate staff table
    protected static void insertIntoStaffTable(int id, String firstName, String lastName, String department, String phone, String email, String username, String password, String status) {
        String[] rowData = {id + "", firstName, lastName, department, phone, email, username, password, status};
        dtm.addRow(rowData);
    }
    
    //get details of selected staff from table
    public Staff getSelectedStaffDetail(){
            int staffID = Integer.parseInt(staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 0).toString());
            String firstName = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 1).toString();
            String lastName = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 2).toString();
            String department = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 3).toString();
            String phone = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 4).toString();
            String email = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 5).toString();
            String username = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 6).toString();
            String password = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 7).toString();
            String status = staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 8).toString();

            Staff staff = new Staff(staffID, firstName, lastName, department, phone, email, username, password, status);
            
            return  staff;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        staffDetailsTable = new javax.swing.JTable();
        removeUser = new javax.swing.JButton();
        editUser = new javax.swing.JButton();
        addNewUser = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 29));
        setLayout(null);

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        staffDetailsTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        staffDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Department", "Tel", "Email", "Username", "Password", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        staffDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffDetailsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(staffDetailsTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 40, 1040, 420);

        removeUser.setBackground(new java.awt.Color(0, 102, 255));
        removeUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeUser.setForeground(new java.awt.Color(255, 255, 255));
        removeUser.setText("Remove");
        removeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserActionPerformed(evt);
            }
        });
        add(removeUser);
        removeUser.setBounds(560, 470, 247, 43);

        editUser.setBackground(new java.awt.Color(0, 0, 102));
        editUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editUser.setForeground(new java.awt.Color(255, 255, 255));
        editUser.setText("Edit");
        editUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserActionPerformed(evt);
            }
        });
        add(editUser);
        editUser.setBounds(290, 470, 257, 43);

        addNewUser.setBackground(new java.awt.Color(0, 51, 0));
        addNewUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addNewUser.setForeground(new java.awt.Color(255, 255, 255));
        addNewUser.setText("Add New User");
        addNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewUserActionPerformed(evt);
            }
        });
        add(addNewUser);
        addNewUser.setBounds(20, 470, 250, 43);
    }// </editor-fold>//GEN-END:initComponents

    private void removeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserActionPerformed
        if(staffDetailsTable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "No staff selected.", "message", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            int deleteOption = JOptionPane.showConfirmDialog(this, "Do You Really Want To Delete This Staff", "Delete Staff", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
            if(deleteOption == JOptionPane.YES_OPTION){
                int staffID = Integer.parseInt(staffDetailsTable.getValueAt(staffDetailsTable.getSelectedRow(), 0).toString());
                dbConnection.deleteStaff(staffID);
                
                dtm.setRowCount(0);
                staff = dbConnection.getAllStaff();
                populateStaffTable(staff);
                JOptionPane.showMessageDialog(this, "Staff Successfully Deleted.", "Message",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_removeUserActionPerformed

    private void editUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserActionPerformed
        if(staffDetailsTable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "No staff selected.", "message", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            EditStaff.staff = getSelectedStaffDetail();
            new EditStaff(null, true).setVisible(true);
        }
        
        
    }//GEN-LAST:event_editUserActionPerformed

    private void addNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewUserActionPerformed
        new AddNewStaff(null, true).setVisible(true);
    }//GEN-LAST:event_addNewUserActionPerformed

    private void staffDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffDetailsTableMouseClicked
    }//GEN-LAST:event_staffDetailsTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewUser;
    private javax.swing.JButton editUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeUser;
    private javax.swing.JTable staffDetailsTable;
    // End of variables declaration//GEN-END:variables
}
